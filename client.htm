<!DOCTYPE html>
<html>

<style>
  html,
  body {
    margin: 0;
    padding: 0;
  }
  body {
    height: 100vh;
    width: 100vw;
    overscroll-behavior-y: contain;
  }
  * {
    box-sizing: border-box;
  }
  div {
    height: 100%;
    width: 100%;
    padding: 10px;
    background-color: #3ac96f;
    overflow: hidden;
  }
</style>

<body>
  <div class="box" id="box1"></div>
</body>

<script>
const socket = new WebSocket("ws://192.168.1.30:8080/ws");  //localhost should be the server's local ip address.

const encoder = new TextEncoder()

const clamp = (num, min, max) => Math.min(Math.max(num, min), max); 

// Connection established with the server 
socket.onopen = function(event) {
  console.log("Connection Established.");
};

// Message is received from server
socket.onmessage = function(event) {
  const message = event.data;
  console.log("Recieved message: " + message);

};

// Connection closed.
socket.onclose = function(event) {
  console.log("Connection closed.");
};

// Sending mouse coordinates to server as byte array
function sendMouseMovement(x, y) {
  const movement = { x: x, y: y };
  socket.send(encoder.encode(JSON.stringify(movement)));
}

function sendMouseClick() {
  socket.send("LeftClick")
}

// Listening touch events and getting x, y coordinates.
window.addEventListener('load', function(){
 
  var box1 = document.getElementById('box1')
  let initialX = 0
  let initialY = 0

  box1.addEventListener('touchstart', function(e){
    let touchobj = e.changedTouches[0]; // reference to first touch point.
    initialX = touchobj.clientX;
    initialY = touchobj.clientY;
    e.preventDefault()
  }, false)

  box1.addEventListener('touchmove', function(e) {
    let touchobj = e.changedTouches[0];
    let offsetX = Math.round(touchobj.clientX - initialX);
    let offsetY = Math.round(touchobj.clientY - initialY);
    sendMouseMovement(clamp(offsetX, -100, 100), clamp(offsetY, -100, 100));
    console.log(clamp(offsetX, -100, 100)+" "+clamp(offsetY, -100, 100))
    e.preventDefault()
  }, false)

}, false)

addEventListener("click", (event) => {
  sendMouseClick()
  event.preventDefault()
});
</script>

</body>
</html> 

